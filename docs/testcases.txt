TEST FRAMEWORK:

TODO modularily, when each function is implemented.

For each function:

1. empty()
2. size()
3. top()
4. push()
5. pop()
6. swap()

Order of implementation:

1. push()
2. pop()
3. top()
4. size()
5. empty()
6. swap()

When empty is implemented add the following test cases:

1. [] (empty array) should output true
2. [3,2,1,3,5,2,4] should output false
3. [30000, 200, 10, 2, 0] should output false

When size() is implemented add the following test cases:

1. [] (empty array) should output 0
2. [3,2,1,3,5,2,4] should output 7

When top() is implemented add the following test cases:

1. [] should output null
2. [3,2,1,3,5,2,4] should output 4

When push() is implemented add the following test cases:

1. when [] (empty array) and push(8) the output should be [8]
2. when pushing multiple times, ie 
   	
	push(3)
   	push(2)
   	push(1)
   	push(3)
   	push(5)
   	push(2)
   	push(4)

   the output should be [3,2,1,3,5,2,4]

When pop() is implemented add the following test cases:

1. pop() on an empty array should still have an empty array
2. pop() on [3,2,1,3,5,2,4] should be [3,2,1,3,5,2] after pop() 

When swap() is implemented add the following test cases:

1. having 2 arrays, [3,2,1] and [3,2] calling swap on [3,2,1] with argument [3,2] should change [3,2,1] to [3,2]  
